package com.funsdk.record;

import com.facebook.react.bridge.NativeModule;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.bridge.Promise;
import com.facebook.react.bridge.WritableArray;
import com.facebook.react.bridge.WritableMap;
import com.facebook.react.bridge.WritableNativeArray;
import com.facebook.react.bridge.WritableNativeMap;
import java.util.Map;
import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;

import com.lib.sdk.struct.H264_DVR_FILE_DATA;
import java.util.List;

import android.util.Log;

import com.manager.account.AccountManager;
import com.manager.device.media.playback.DevRecordManager;
import com.manager.account.BaseAccountManager;
import com.manager.db.DevDataCenter;
import com.manager.db.XMDevInfo;
import com.manager.device.media.playback.CloudRecordManager;

import com.funsdk.utils.Constants;
import com.funsdk.utils.ReactParamsCheck;

public class FunSDKRecListModule extends ReactContextBaseJavaModule {
   private List<H264_DVR_FILE_DATA> recordList;
   //private RecordManager recordManager;

  public FunSDKRecListModule(ReactApplicationContext context) {
    super(context);
  }

  @Override
  public String getName() {
    return "FunSDKRecListModule";
  }

  /**
   * get the device list
   */
  @ReactMethod
  public void getRecList(Promise promise) {
    try {
      /*WritableArray writableArray = new WritableNativeArray();

      for (String item : RecordManager.searchFile()) {
        writableArray.pushString(item);
      }

      WritableMap writableMap = new WritableNativeMap();
      writableMap.putArray("records", writableArray);

      promise.resolve(writableMap);
        recordList = new ArrayList<>();
        System.out.println("recordList: " + recordList);
      recordList.addAll(RecordManagerInterface.searchFile());

        System.out.println("recordList: " + recordList);
      promise.resolve(recordList);*/
      //System.out.println(CloudRecordManager);
    } catch (Exception e) {
      promise.reject("CONVERSION_ERROR", e.getMessage());
    }
  }
}